---
--- Generated by EmmyLua(https://github.com/EmmyLua)
--- Created by mraof.
--- DateTime: 8/24/19 10:10 PM
---

after = {"common", "regions"}

-- Anything after -- are comments, and will be ignored when the config is loaded
-- Anywhere that a string (text in quotes) is used, you can put any other sort of generator
config["examples"] = { -- the config value itself is a SuperGenerator in this case, but it can be any kind of generator
    string = "string", -- The most basic type of generator, just returns its own value
    number = 5.5, -- Numbers return their own value
    bool = false, -- booleans (true/false values) also just return their own value
    super_generator = { -- returns all fields listed, fields can be any sort of generator
        prefix = false, -- whether to prefix the names of fields sub generators return with the name of the sub generator, defaults to false
        id = "Example SuperGenerator", -- Base field generator returns, will just be called whatever the parent adds as a prefix (field not required)
        meow = "meow",
        sub_generator = {
            id = "sub generator",
            sub_field = "sub field",
        }
    },
    list = {
        "List value 1",
        2,
        "List value 3",
    },
    weighted = { -- Generator that chooses from list based on rarity
        { "Common value 1", COMMON },
        { "Common value 2", COMMON },
        { "Uncommon value", UNCOMMON },
        { "Rare value", RARE },
        { "Very rare value", VERY_RARE },
        { "Extremely rare value", EXTREMELY_RARE },
    },
    reused_generator = "gen tcpgen", -- Strings that start with "gen " reuse generators defined before this config was loaded
    empty = "", -- Empty strings mean to not set the field, use in lists or weighted generators to make them optional
    lua_function = function() -- custom generator defined in lua, can return multiple fields the same way as a super generator, but the fields have to be strings, numbers or booleans
        return {
            id = random(1, 20),
            elf = "Elf" .. "Secrets"
        }
    end,
    prefix = true,
}

config["maybe hair"] = {
    prefix = true,
    hair = {
        {{
             length = "gen hair length",
             style = "gen hair style",
         }, COMMON},
        {"", COMMON}
    }
}

head_casing = {
    { {
          { "mechanical", COMMON },
          { {
                { "appliance", COMMON },
                { "blender", COMMON },
                { "microwave", COMMON },
            }, COMMON },
          { {
                { "robotic", COMMON },
                { "laser", COMMON },
                { "robot", COMMON },
                { "construct", COMMON },
            }, COMMON },
      }, COMMON },
    { {
          { "fragile", COMMON },
          { "glass", COMMON },
          { "soda can", COMMON },
          { "ceramic", COMMON },
      }, COMMON },
    { "custom", RARE }
}
config["head casing"] = head_casing

